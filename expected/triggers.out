--
\set VERBOSITY terse
\set QUIET 0
-- Test triggers.
--
-- Don't use pg10-specific stuff here; that goes in triggers_10.sql
create table trigtst (
  id integer primary key,
  name text,
  flag boolean,
  qty integer,
  weight numeric
);
CREATE TABLE
create function misctrig() returns trigger language pllua
as $$
  print(trigger.name,...)
  print(trigger.when, trigger.level, trigger.operation, trigger.relation.name)
  if trigger.level == "row" then
    print(old,new)
  end
$$;
CREATE FUNCTION
create trigger t1
  before insert or update or delete on trigtst
  for each statement
  execute procedure misctrig('foo','bar');
CREATE TRIGGER
create trigger t2
  after insert or update or delete on trigtst
  for each statement
  execute procedure misctrig('foo','bar');
CREATE TRIGGER
insert into trigtst
  values (1, 'fred', true, 23, 1.73),
  	 (2, 'jim', false, 11, 3.1),
	 (3, 'sheila', false, 9, 1.3),
  	 (4, 'dougal', false, 1, 9.3),
 	 (5, 'brian', false, 31, 51.5),
	 (6, 'ermintrude', true, 91, 52.7),
	 (7, 'dylan', false, 35, 12.1),
	 (8, 'florence', false, 23, 5.4),
	 (9, 'zebedee', false, 199, 7.4);
INFO:  t1	foo	bar
INFO:  before	statement	insert	trigtst
INFO:  t2	foo	bar
INFO:  after	statement	insert	trigtst
INSERT 0 9
update trigtst set qty = qty + 1;
INFO:  t1	foo	bar
INFO:  before	statement	update	trigtst
INFO:  t2	foo	bar
INFO:  after	statement	update	trigtst
UPDATE 9
delete from trigtst where name = 'sheila';
INFO:  t1	foo	bar
INFO:  before	statement	delete	trigtst
INFO:  t2	foo	bar
INFO:  after	statement	delete	trigtst
DELETE 1
create trigger t3
  before insert or update or delete on trigtst
  for each row
  execute procedure misctrig('wot');
CREATE TRIGGER
create trigger t4
  after insert or update or delete on trigtst
  for each row
  execute procedure misctrig('wot');
CREATE TRIGGER
insert into trigtst values (3, 'sheila', false, 9, 1.3);
INFO:  t1	foo	bar
INFO:  before	statement	insert	trigtst
INFO:  t3	wot
INFO:  before	row	insert	trigtst
INFO:  nil	(3,sheila,f,9,1.3)
INFO:  t4	wot
INFO:  after	row	insert	trigtst
INFO:  nil	(3,sheila,f,9,1.3)
INFO:  t2	foo	bar
INFO:  after	statement	insert	trigtst
INSERT 0 1
update trigtst set flag = true where name = 'dylan';
INFO:  t1	foo	bar
INFO:  before	statement	update	trigtst
INFO:  t3	wot
INFO:  before	row	update	trigtst
INFO:  (7,dylan,f,36,12.1)	(7,dylan,t,36,12.1)
INFO:  t4	wot
INFO:  after	row	update	trigtst
INFO:  (7,dylan,f,36,12.1)	(7,dylan,t,36,12.1)
INFO:  t2	foo	bar
INFO:  after	statement	update	trigtst
UPDATE 1
delete from trigtst where name = 'jim';
INFO:  t1	foo	bar
INFO:  before	statement	delete	trigtst
INFO:  t3	wot
INFO:  before	row	delete	trigtst
INFO:  (2,jim,f,12,3.1)	nil
INFO:  t4	wot
INFO:  after	row	delete	trigtst
INFO:  (2,jim,f,12,3.1)	nil
INFO:  t2	foo	bar
INFO:  after	statement	delete	trigtst
DELETE 1
-- check result is as expected
select * from trigtst order by id;
 id |    name    | flag | qty | weight 
----+------------+------+-----+--------
  1 | fred       | t    |  24 |   1.73
  3 | sheila     | f    |   9 |    1.3
  4 | dougal     | f    |   2 |    9.3
  5 | brian      | f    |  32 |   51.5
  6 | ermintrude | t    |  92 |   52.7
  7 | dylan      | t    |  36 |   12.1
  8 | florence   | f    |  24 |    5.4
  9 | zebedee    | f    | 200 |    7.4
(8 rows)

drop trigger t1 on trigtst;
DROP TRIGGER
drop trigger t2 on trigtst;
DROP TRIGGER
drop trigger t3 on trigtst;
DROP TRIGGER
drop trigger t4 on trigtst;
DROP TRIGGER
-- compatible mode: assign to row fields
create function modtrig1() returns trigger language pllua
as $$
  print(trigger.name,trigger.operation,old,new)
  trigger.row.weight = 10 * trigger.row.qty
  trigger.row.flag = false
  print(trigger.name,trigger.operation,old,new)
$$;
CREATE FUNCTION
create trigger t1
  before insert or update or delete on trigtst
  for each row
  execute procedure modtrig1();
CREATE TRIGGER
insert into trigtst values (2, 'jim', true, 11, 3.1);
INFO:  t1	insert	nil	(2,jim,t,11,3.1)
INFO:  t1	insert	nil	(2,jim,f,11,110)
INSERT 0 1
update trigtst set flag = true where name = 'ermintrude';
INFO:  t1	update	(6,ermintrude,t,92,52.7)	(6,ermintrude,t,92,52.7)
INFO:  t1	update	(6,ermintrude,t,92,52.7)	(6,ermintrude,f,92,920)
UPDATE 1
delete from trigtst where name = 'fred';
INFO:  t1	delete	(1,fred,t,24,1.73)	nil
INFO:  t1	delete	(1,fred,f,24,240)	nil
DELETE 1
select * from trigtst order by id;
 id |    name    | flag | qty | weight 
----+------------+------+-----+--------
  2 | jim        | f    |  11 |    110
  3 | sheila     | f    |   9 |    1.3
  4 | dougal     | f    |   2 |    9.3
  5 | brian      | f    |  32 |   51.5
  6 | ermintrude | f    |  92 |    920
  7 | dylan      | t    |  36 |   12.1
  8 | florence   | f    |  24 |    5.4
  9 | zebedee    | f    | 200 |    7.4
(8 rows)

drop trigger t1 on trigtst;
DROP TRIGGER
-- compatible mode: assign to row wholesale
create function modtrig2() returns trigger language pllua
as $$
  print(trigger.name,trigger.op,old,new)
  local id,name,flag,qty,weight = new.id, new.name, new.flag, new.qty, new.weight
  qty = 2 + qty
  weight = weight * 2
  flag = not flag
  trigger.row = { id = id, name = name, flag = flag, qty = qty, weight = weight }
$$;
CREATE FUNCTION
create trigger t1
  before insert or update on trigtst
  for each row
  execute procedure modtrig2();
CREATE TRIGGER
insert into trigtst values (1, 'fred', true, 23, 1.73);
INFO:  t1	insert	nil	(1,fred,t,23,1.73)
INSERT 0 1
update trigtst set flag = true where name = 'zebedee';
INFO:  t1	update	(9,zebedee,f,200,7.4)	(9,zebedee,t,200,7.4)
UPDATE 1
delete from trigtst where name = 'jim';
DELETE 1
select * from trigtst order by id;
 id |    name    | flag | qty | weight 
----+------------+------+-----+--------
  1 | fred       | f    |  25 |   3.46
  3 | sheila     | f    |   9 |    1.3
  4 | dougal     | f    |   2 |    9.3
  5 | brian      | f    |  32 |   51.5
  6 | ermintrude | f    |  92 |    920
  7 | dylan      | t    |  36 |   12.1
  8 | florence   | f    |  24 |    5.4
  9 | zebedee    | f    | 202 |   14.8
(8 rows)

drop trigger t1 on trigtst;
DROP TRIGGER
-- compatible mode: assign to row wholesale with new datum row
create function modtrig3() returns trigger language pllua
as $$
  print(trigger.name,trigger.operation,old,new)
  local id,name,flag,qty,weight = new.id, new.name, new.flag, new.qty, new.weight
  qty = 2 + qty
  weight = weight * 2
  flag = not flag
  trigger.row = pgtype(new)(id,name,flag,qty,weight)
$$;
CREATE FUNCTION
create trigger t1
  before insert or update on trigtst
  for each row
  execute procedure modtrig3();
CREATE TRIGGER
insert into trigtst values (2, 'jim', false, 11, 3.1);
INFO:  t1	insert	nil	(2,jim,f,11,3.1)
INSERT 0 1
update trigtst set flag = true where name = 'zebedee';
INFO:  t1	update	(9,zebedee,f,202,14.8)	(9,zebedee,t,202,14.8)
UPDATE 1
delete from trigtst where name = 'fred';
DELETE 1
select * from trigtst order by id;
 id |    name    | flag | qty | weight 
----+------------+------+-----+--------
  2 | jim        | t    |  13 |    6.2
  3 | sheila     | f    |   9 |    1.3
  4 | dougal     | f    |   2 |    9.3
  5 | brian      | f    |  32 |   51.5
  6 | ermintrude | f    |  92 |    920
  7 | dylan      | t    |  36 |   12.1
  8 | florence   | f    |  24 |    5.4
  9 | zebedee    | f    | 204 |   29.6
(8 rows)

drop trigger t1 on trigtst;
DROP TRIGGER
-- return value mode
create function modtrig4() returns trigger language pllua
as $$
  print(trigger.name,trigger.operation,old,new)
  local id,name,flag,qty,weight = new.id, new.name, new.flag, new.qty, new.weight
  qty = 2 + qty
  weight = weight * 2
  flag = not flag
  return { id = id, name = name, flag = flag, qty = qty, weight = weight }
$$;
CREATE FUNCTION
create trigger t1
  before insert or update on trigtst
  for each row
  execute procedure modtrig4();
CREATE TRIGGER
insert into trigtst values (1, 'fred', true, 23, 1.73);
INFO:  t1	insert	nil	(1,fred,t,23,1.73)
INSERT 0 1
update trigtst set flag = false where name = 'dylan';
INFO:  t1	update	(7,dylan,t,36,12.1)	(7,dylan,f,36,12.1)
UPDATE 1
delete from trigtst where name = 'jim';
DELETE 1
select * from trigtst order by id;
 id |    name    | flag | qty | weight 
----+------------+------+-----+--------
  1 | fred       | f    |  25 |   3.46
  3 | sheila     | f    |   9 |    1.3
  4 | dougal     | f    |   2 |    9.3
  5 | brian      | f    |  32 |   51.5
  6 | ermintrude | f    |  92 |    920
  7 | dylan      | t    |  38 |   24.2
  8 | florence   | f    |  24 |    5.4
  9 | zebedee    | f    | 204 |   29.6
(8 rows)

drop trigger t1 on trigtst;
DROP TRIGGER
-- return value mode
create function modtrig5() returns trigger language pllua
as $$
  print(trigger.name,trigger.operation,old,new)
  local id,name,flag,qty,weight = new.id, new.name, new.flag, new.qty, new.weight
  qty = 2 + qty
  weight = weight * 2
  flag = not flag
  return pgtype(new)(id,name,flag,qty,weight)
$$;
CREATE FUNCTION
create trigger t1
  before insert or update on trigtst
  for each row
  execute procedure modtrig5();
CREATE TRIGGER
insert into trigtst values (2, 'jim', false, 11, 3.1);
INFO:  t1	insert	nil	(2,jim,f,11,3.1)
INSERT 0 1
update trigtst set flag = false where name = 'dougal';
INFO:  t1	update	(4,dougal,f,2,9.3)	(4,dougal,f,2,9.3)
UPDATE 1
delete from trigtst where name = 'fred';
DELETE 1
select * from trigtst order by id;
 id |    name    | flag | qty | weight 
----+------------+------+-----+--------
  2 | jim        | t    |  13 |    6.2
  3 | sheila     | f    |   9 |    1.3
  4 | dougal     | t    |   4 |   18.6
  5 | brian      | f    |  32 |   51.5
  6 | ermintrude | f    |  92 |    920
  7 | dylan      | t    |  38 |   24.2
  8 | florence   | f    |  24 |    5.4
  9 | zebedee    | f    | 204 |   29.6
(8 rows)

drop trigger t1 on trigtst;
DROP TRIGGER
-- throw error from trigger
create function modtrig6() returns trigger language pllua
as $$
  print(trigger.name,trigger.operation,old,new)
  if new.flag ~= old.flag then error("no changing flags") end
$$;
CREATE FUNCTION
create trigger t1
  before update on trigtst
  for each row
  execute procedure modtrig6();
CREATE TRIGGER
update trigtst set flag = false where name = 'dougal';
INFO:  t1	update	(4,dougal,t,4,18.6)	(4,dougal,f,4,18.6)
ERROR:  pllua: [string "modtrig6"]:3: no changing flags
select * from trigtst order by id;
 id |    name    | flag | qty | weight 
----+------------+------+-----+--------
  2 | jim        | t    |  13 |    6.2
  3 | sheila     | f    |   9 |    1.3
  4 | dougal     | t    |   4 |   18.6
  5 | brian      | f    |  32 |   51.5
  6 | ermintrude | f    |  92 |    920
  7 | dylan      | t    |  38 |   24.2
  8 | florence   | f    |  24 |    5.4
  9 | zebedee    | f    | 204 |   29.6
(8 rows)

drop trigger t1 on trigtst;
DROP TRIGGER
-- throw error from trigger
create function modtrig7() returns trigger language pllua
as $$
  print(trigger.name,trigger.operation,old,new)
  if new.flag ~= old.flag then error("no changing flags") end
$$;
CREATE FUNCTION
create trigger t1
  before update on trigtst
  for each row
  execute procedure modtrig7();
CREATE TRIGGER
update trigtst set flag = true where name = 'florence';
INFO:  t1	update	(8,florence,f,24,5.4)	(8,florence,t,24,5.4)
ERROR:  pllua: [string "modtrig7"]:3: no changing flags
select * from trigtst order by id;
 id |    name    | flag | qty | weight 
----+------------+------+-----+--------
  2 | jim        | t    |  13 |    6.2
  3 | sheila     | f    |   9 |    1.3
  4 | dougal     | t    |   4 |   18.6
  5 | brian      | f    |  32 |   51.5
  6 | ermintrude | f    |  92 |    920
  7 | dylan      | t    |  38 |   24.2
  8 | florence   | f    |  24 |    5.4
  9 | zebedee    | f    | 204 |   29.6
(8 rows)

drop trigger t1 on trigtst;
DROP TRIGGER
-- suppress action 1
create function modtrig8() returns trigger language pllua
as $$
  print(trigger.name,trigger.operation,old,new)
  if new.flag ~= old.flag then return nil end
$$;
CREATE FUNCTION
create trigger t1
  before update on trigtst
  for each row
  execute procedure modtrig8();
CREATE TRIGGER
update trigtst set flag = true where name = 'florence';
INFO:  t1	update	(8,florence,f,24,5.4)	(8,florence,t,24,5.4)
UPDATE 0
select * from trigtst order by id;
 id |    name    | flag | qty | weight 
----+------------+------+-----+--------
  2 | jim        | t    |  13 |    6.2
  3 | sheila     | f    |   9 |    1.3
  4 | dougal     | t    |   4 |   18.6
  5 | brian      | f    |  32 |   51.5
  6 | ermintrude | f    |  92 |    920
  7 | dylan      | t    |  38 |   24.2
  8 | florence   | f    |  24 |    5.4
  9 | zebedee    | f    | 204 |   29.6
(8 rows)

drop trigger t1 on trigtst;
DROP TRIGGER
-- suppress action 2
create function modtrig9() returns trigger language pllua
as $$
  print(trigger.name,trigger.operation,old,new)
  if new.flag ~= old.flag then trigger.row = nil end
$$;
CREATE FUNCTION
create trigger t1
  before update on trigtst
  for each row
  execute procedure modtrig9();
CREATE TRIGGER
update trigtst set flag = true where name = 'florence';
INFO:  t1	update	(8,florence,f,24,5.4)	(8,florence,t,24,5.4)
UPDATE 0
select * from trigtst order by id;
 id |    name    | flag | qty | weight 
----+------------+------+-----+--------
  2 | jim        | t    |  13 |    6.2
  3 | sheila     | f    |   9 |    1.3
  4 | dougal     | t    |   4 |   18.6
  5 | brian      | f    |  32 |   51.5
  6 | ermintrude | f    |  92 |    920
  7 | dylan      | t    |  38 |   24.2
  8 | florence   | f    |  24 |    5.4
  9 | zebedee    | f    | 204 |   29.6
(8 rows)

drop trigger t1 on trigtst;
DROP TRIGGER
-- table with one column exercises several edge cases:
create table trigtst1col (col integer);
CREATE TABLE
create function modtrig10() returns trigger language pllua
as $$
  print(trigger.name,trigger.operation,old,new)
  new.col = 123
$$;
CREATE FUNCTION
create trigger t1
  before insert on trigtst1col
  for each row
  execute procedure modtrig10();
CREATE TRIGGER
insert into trigtst1col values (1);
INFO:  t1	insert	nil	(1)
INSERT 0 1
insert into trigtst1col values (2);
INFO:  t1	insert	nil	(2)
INSERT 0 1
select * from trigtst1col;
 col 
-----
 123
 123
(2 rows)

create type t2col as (a integer, b text);
CREATE TYPE
create table trigtst1col2 (col t2col);
CREATE TABLE
create function modtrig11() returns trigger language pllua
as $$
  print(trigger.name,trigger.operation,old,new)
  new.col.a = 123
$$;
CREATE FUNCTION
create trigger t1
  before insert on trigtst1col2
  for each row
  execute procedure modtrig11();
CREATE TRIGGER
insert into trigtst1col2 values (row(1,'foo')::t2col);
INFO:  t1	insert	nil	("(1,foo)")
INSERT 0 1
select * from trigtst1col2;
    col    
-----------
 (123,foo)
(1 row)

-- exercise dropped columns:
create table trigtst1dcol (col text, dcol text);
CREATE TABLE
alter table trigtst1dcol drop column dcol;
ALTER TABLE
create trigger t1
  after insert or update or delete on trigtst1dcol
  for each row
  execute procedure misctrig('blah');
CREATE TRIGGER
insert into trigtst1dcol values ('foo');
INFO:  t1	blah
INFO:  after	row	insert	trigtst1dcol
INFO:  nil	(foo)
INSERT 0 1
update trigtst1dcol set col = 'bar';
INFO:  t1	blah
INFO:  after	row	update	trigtst1dcol
INFO:  (foo)	(bar)
UPDATE 1
delete from trigtst1dcol;
INFO:  t1	blah
INFO:  after	row	delete	trigtst1dcol
INFO:  (bar)	nil
DELETE 1
--
